courtiers_mass_marriage_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_invite_knights.dds"
	desc = courtiers_mass_marriage_decision_desc
	
	confirm_text = courtiers_mass_marriage_decision_confirm
	selection_tooltip = courtiers_mass_marriage_decision_tooltip

	# Shown only to player
	is_shown = { 
		is_ai = no
		is_ruler = yes
        }

	# Avaliable when there are unmarried adult courtiers eligible to marry
	# This does not include family
	is_valid ={
		any_courtier = {
			age >= 16
			is_married = no
			is_betrothed = no
			NOT = {
				is_close_or_extended_family_of = root
			}
			can_marry_trigger = yes
			root = {
				is_character_interaction_valid = {
					recipient = prev
					interaction = marry_off_interaction
				}
			}
		}
		
	}
	# Go through all eligible courtiers and find random pool character
	# If no such pool character exists, Create a pool_character based on existing spouse template
	# Considers cultural tradiition similar to invite knight decision
	# Either matrilineal marriage or marriage
	effect = {
		every_courtier = {
			limit = {
				age >= 16
				is_married = no
				is_betrothed = no
				NOT = {
					is_close_or_extended_family_of = root
				}
				can_marry_trigger = yes
				root = {
					is_character_interaction_valid = {
						recipient = prev
						interaction = marry_off_interaction
					}
				}
			}
			
			save_temporary_scope_as = template
		
			if = {
				limit = {
					exists = scope:every_courtier.location
				}
				random_pool_character = {
					province = scope:every_courtier.location
					limit = {
						allowed_to_marry_character_gender_trigger = { CHARACTER = scope:every_courtier }
						is_physically_able_adult = yes
						age <= 40
						prowess >= 12
						is_married = no
						can_marry_trigger = yes
						is_concubine = no
						is_attracted_to_gender_of = scope:every_courtier
						NOT = {
							is_close_or_extended_family_of = root
						}
						
					}
					save_temporary_scope_as = spouse
				}
			}
			else = {
				create_character = {
					location = scope:template.location
					gender_female_chance = scope:template.marriage_gender_adjusted_female_chance
					template = pool_repopulate_spouse
					prowess = { 12 15 }
					save_temporary_scope_as = spouse
				}
			}
			if = {
				limit = {
					root.culture = {
						has_cultural_parameter = better_knights_from_decision
					}
				}
				hidden_effect = {
					scope:spouse = {
						blademaster_lifestyle_rank_up_effect = yes
						knight_increase_prowess_chance_effect = yes
						knight_increase_prowess_chance_effect = yes
					}
				}
			}

			if = {
				limit = {
					is_male = yes
				}
				marry = scope:spouse
			}
			else = {
				marry_matrilineal = scope:spouse
			}
			scope:spouse = {
				if = {
					limit = {
						exists = scope:template.host
					}
					visit_court_of = scope:template.host
				}
			}
		}
	}
}