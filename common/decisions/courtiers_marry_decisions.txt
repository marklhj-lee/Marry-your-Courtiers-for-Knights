courtiers_marry_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_invite_knights.dds"
	desc = courtiers_marry_decision_desc
	
	confirm_text = courtiers_marry_decision_confirm

	is_shown = { 
		is_ai = no
		is_ruler = yes
        }
	is_valid ={
		any_courtier = {
			is_married = no
			is_betrothed = no
			NOT = {
				is_close_or_extended_family_of = root
			}
			can_marry_trigger = yes
			root = {
				is_character_interaction_valid = {
					recipient = prev
					interaction = marry_off_interaction
				}
			}
		}
		
	}
	
	effect = {
		custom_tooltip = courtiers_marry_decision.tt

		every_courtier = {
			limit = {
				is_married = no
				is_betrothed = no
				NOT = {
					is_close_or_extended_family_of = root
				}
				can_marry_trigger = yes
				root = {
					is_character_interaction_valid = {
						recipient = prev
						interaction = marry_off_interaction
					}
				}
			}
				
			add_gold = 1000
		}
		# every_courtier = {

		# 	is_married = no
		# 	is_betrothed = no
		# 	NOT = {
		# 		is_close_or_extended_family_of = root
		# 	}
		# 	can_marry_trigger = yes
		# 	root = {
		# 		is_character_interaction_valid = {
		# 			recipient = prev
		# 			interaction = marry_off_interaction
		# 		}
		# 	}
		# 	add_gold = 1000
		# 	save_temporary_scope_as = template
		# 	if = {
		# 		limit = {
		# 			exists = scope:every_courtier.location
		# 		}
		# 		random_courtier = {
		# 			province = scope:every_courtier.location
		# 			limit = {
		# 				allowed_to_marry_character_gender_trigger = { CHARACTER = scope:every_courtier }
		# 				is_physically_able_adult = yes
		# 				age <= 40
		# 				is_married = no
		# 				can_marry_trigger = yes
		# 				is_concubine = no
		# 				is_attracted_to_gender_of = scope:every_courtier
		# 			}
		# 			save_temporary_scope_as = spouse
		# 		}
		# 	}
		# 	else = {
		# 		create_character = {
		# 			location = scope:template.location
		# 			gender_female_chance = scope:template.marriage_gender_adjusted_female_chance
		# 			template = pool_repopulate_spouse
		# 			save_temporary_scope_as = spouse
		# 		}
		# 	}

		# 	if = {
		# 		limit = {
		# 			is_female = yes
		# 			is_lowborn = no
		# 			scope:spouse = {
		# 				is_lowborn = yes
		# 			}
		# 		}
		# 		marry_matrilineal = scope:spouse
		# 	}
		# 	else_if = {
		# 		limit = {
		# 			is_male = yes
		# 			is_lowborn = yes
		# 			scope:spouse = {
		# 				is_lowborn = no
		# 			}
		# 		}
		# 		marry_matrilineal = scope:spouse
		# 	}
		# 	else = {
		# 		marry = scope:spouse
		# 	}
			
		# 	scope:spouse = {
		# 		if = {
		# 			limit = {
		# 				exists = scope:template.host
		# 			}
		# 			visit_court_of = scope:template.host
		# 		}
		# 	}
		# }


		# bachelor ={
		# 	ordered_potential_marriage_option = {
		# 		limit = {
		# 			is_physically_able_adult = yes
		# 			is_married = no
		# 			can_marry_trigger = yes
		# 			is_concubine = no
		# 		}
		# 		order_by = prowess
		# 		position = 0
		# 		check_range_bounds = no # If you don't want an error logged if the list is smaller than the min/max <effects> 
		# 		save_temporary_scope_as = spouse
		# 	}

		# }
		# bachelor = {
		# 	save_temporary_scope_as = template
		# 	if = {
		# 		limit = {
		# 			exists = scope:bachelor.location
		# 			any_bachelor = {
		# 				province = scope:bachelor.location
		# 				allowed_to_marry_character_gender_trigger = { CHARACTER = scope:bachelor }
		# 				is_physically_able_adult = yes
		# 				age <= 40
		# 				is_married = no
		# 				can_marry_trigger = yes
		# 				is_concubine = no
		# 				is_attracted_to_gender_of = scope:bachelor
		# 			}
		# 		}
		# 		random_bachelor = {
		# 			province = scope:bachelor.location
		# 			limit = {
		# 				allowed_to_marry_character_gender_trigger = { CHARACTER = scope:bachelor }
		# 				is_physically_able_adult = yes
		# 				age <= 40
		# 				is_married = no
		# 				can_marry_trigger = yes
		# 				is_concubine = no
		# 				is_attracted_to_gender_of = scope:bachelor
		# 			}
		# 			save_temporary_scope_as = spouse
		# 		}
		# 	}
		# 	else = {
		# 		create_character = {
		# 			location = scope:template.location
		# 			gender_female_chance = scope:template.marriage_gender_adjusted_female_chance
		# 			template = pool_repopulate_spouse
		# 			save_temporary_scope_as = spouse
		# 		}
		# 	}

		# 	if = {
		# 		limit = {
		# 			is_female = yes
		# 			is_lowborn = no
		# 			scope:spouse = {
		# 				is_lowborn = yes
		# 			}
		# 		}
		# 		marry_matrilineal = scope:spouse
		# 	}
		# 	else_if = {
		# 		limit = {
		# 			is_male = yes
		# 			is_lowborn = yes
		# 			scope:spouse = {
		# 				is_lowborn = no
		# 			}
		# 		}
		# 		marry_matrilineal = scope:spouse
		# 	}
		# 	else = {
		# 		marry = scope:spouse
		# 	}
			
		# 	scope:spouse = {
		# 		if = {
		# 			limit = {
		# 				exists = scope:template.host
		# 			}
		# 			visit_court_of = scope:template.host
		# 		}
		# 	}
		# }
		
		
		
		# trigger_event = {
		# 	id = marrycourt.0001
		# }
    }
}